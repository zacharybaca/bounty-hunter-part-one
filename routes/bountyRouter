const express = require('express');
const bountyRouter = express.Router();


const { v4: uuidv4 } = require("uuid");

const bounties = [
  {
    id: uuidv4(),
    firstName: "Sunny",
    lastName: "Stacy",
    living: true,
    bountyAmount: 500,
    type: "jedi",
  },
  {
    id: uuidv4(),
    firstName: "Jethro",
    lastName: "Stacy",
    living: true,
    bountyAmount: 500,
    type: "jedi",
  },
];


bountyRouter.route('/')
    .get((req, res) => {
        res.send(bounties);
    })
    .post((req, res) => {
        const newBounty = req.body;

        newBounty.id = uuidv4();

        if (
          newBounty.hasOwnProperty("firstName") &&
          newBounty.hasOwnProperty("lastName") &&
          newBounty.hasOwnProperty("living") &&
          newBounty.hasOwnProperty("bountyAmount") &&
          newBounty.hasOwnProperty("type")
        ) {
          bounties.push(newBounty);
          res.status(200).send(`You successfully added ${newBounty}`);
        } else {
          res.status(500).send("Required Fields Not Filled In Correctly");
        }
    })

bountyRouter.route('/:id')
    .put((req, res) => {
      const id = req.params.id;

      if (!id) {
        res.status(500).send("Please Provide The ID of The Item That Needs Updated");
      }

      const itemToBeUpdated = bounties.findIndex((bounty) => bounty.id === id);

      if (!itemToBeUpdated) {
        res.status(404).send("The Provided ID Is Not Assigned To Any Items");
      }

      const updatedItem = Object.assign(bounties[itemToBeUpdated], req.body);

      res.send(updatedItem);
    })
    .delete((req, res) => {
      const id = req.params.id;

      if (!id) {
        res.status(500).send("Please Provide The ID of The Item That Needs Deleted");
      }

      const itemToBeDeleted = bounties.findIndex((bounty) => bounty.id === id);

      bounties.splice(itemToBeDeleted, 1);

      res.send("Item Has Been Deleted Successfully");
    })

    module.exports = bountyRouter;